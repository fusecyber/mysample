name: lint

permissions:
  pull-requests: write

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "**"
    types:
      - opened
      - synchronize

jobs:
  dir-identify:
    outputs:
      target_dir: ${{ steps.changes.outputs.target_dir }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: checkout
      - name: github-action misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.github_token }}
          locale: "US"
      - uses: dorny/paths-filter@v3
        name: check-dir
        id: dir-filter
        with:
          list-files: json
          filters: |
            changed: 'terraform*/**'
      #- uses: EPMatt/reviewdog-action-prettier@v1
      #  with:
      #    github_token: ${{ secrets.github_token }}
      #    reporter: github-pr-review
      #    level: warning
      - name: detect-target-dir
        id: changes
        env:
          changed: ${{steps.dir-filter.outputs.changed_files}}
        run: |
          target_dir="$( echo ${changed} | jq -r '.[]' | xargs dirname | sort | uniq | jq -s -R -c 'split("\n") | map(select(. != ""))')"
          echo "target_dir=${target_dir}" >> $GITHUB_OUTPUT
        shell: bash

  tflint:
    needs: dir-identify
    if: needs.dir-identify.outputs.target_dir != '[]'
    strategy:
      matrix:
        target_dir: ${{ fromJSON(needs.dir-identify.outputs.target_dir) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout source code
      - run: echo "Building ${{ matrix.target_dir }}"

      - uses: actions/cache@v4
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}

      #- name: Install Terraform
      #  run: |
      #    brew install terraform

      #- uses: terraform-linters/setup-tflint@v4
      #  name: Setup TFLint
      #  with:
      #    tflint_version: v0.50.3

      #- name: Show tflnt version
      #  run: tflint --version

      #- name: Init TFLint
      #  run: tflint --init
      #  working_directory: ${{ matrix.target_dir }}
      #  env:
      #    GITHUB_TOKEN: ${{ github.token }}

      #- uses: ./.github/actions/diff
      #  name: diff
      #  id: diff
      #  with:
      #    subdir: terraform

      #- name: Run TFLint
      #  working-directory: ${{ matrix.target_dir }}
      #  run: tflint -f compact --config $GITHUB_WORKSPACE/.tflint.hcl
      #- run: echo ${{ steps.tflint.outputs.stdout }}
      #- run: echo ${{ steps.tflint.outputs.stderr }}
      #- run: echo ${{ steps.tflint.outputs.exitcode }}

      #- name: Terraform init
      #  working-directory: ${{ matrix.target_dir }}
      #  run: |
      #    terraform init

      - name: tflint
        uses: reviewdog/action-tflint@v1
        with:
          github_token: ${{ secrets.github_token }}
          tflint_config: "${{ github.workspace }}/.tflint.hcl"
          working_directory: ${{ matrix.target_dir }}
          level: "waring"
          tflint_init: "true"
          reporter: github-pr-review
          fail_on_error: "true"
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.github_token }}
      - run: echo ${{ steps.tflint.outputs.stdout }}
      - run: echo ${{ steps.tflint.outputs.stderr }}
      - run: echo ${{ steps.tflint.outputs.exitcode }}
